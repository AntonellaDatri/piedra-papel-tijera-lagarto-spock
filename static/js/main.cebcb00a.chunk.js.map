{"version":3,"sources":["images/Arrow-left-short.svg","images/piedra.png","images/papel.png","images/tijera.png","images/lagarto.png","images/spock.png","images/RPSLS.png","pages/home.js","components/navbar.js","components/resultados.js","pages/play.js","components/instrucciones.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","font-size","to","type","Navbar","props","text","src","ArrowLeftShort","width","alt","ganador","eleccionJ1","eleccionJ2","onClick","image","tipo","Play","useState","puntosJugador1","setPuntosJugador1","puntosJugador2","setPuntosJugador2","setEleccionJ1","setEleccionJ2","setGanador","showResultados","setShowResultados","opciones","Piedra","Papel","Tijera","Lagarto","Spock","verificarGanador","seleccionP1","items","seleccionP2","Math","floor","random","length","ganaJugador1","map","content","key","Instucciones","InstuccionImage","App","basename","process","exact","path","component","Instrucciones","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cebcb00a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Arrow-left-short.33fcecc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/piedra.f8e1fb17.png\";","module.exports = __webpack_public_path__ + \"static/media/papel.5647840a.png\";","module.exports = __webpack_public_path__ + \"static/media/tijera.988df82d.png\";","module.exports = __webpack_public_path__ + \"static/media/lagarto.e8609392.png\";","module.exports = __webpack_public_path__ + \"static/media/spock.188f7143.png\";","module.exports = __webpack_public_path__ + \"static/media/RPSLS.2787eae1.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//\r\n\r\nfunction Home() {\r\n\r\n  return (\r\n      <div className=\"background-container\">\r\n        <div className=\"container \">\r\n          <div className=\"titulo\" >\r\n            <p className=\"title-style\" font-size=\"60px\" >Piedra Papel Tijera Lagarto Spock</p>\r\n          </div>\r\n          <div className=\"home-btn\">\r\n              <Link  to =\"/play\"> \r\n              <button type=\"button\" className=\"btn btn-dark\">Jugar</button>\r\n            </Link>\r\n            <Link  to =\"/instrucciones\"> \r\n              <button type=\"button\" className=\"btn btn-outline-light\">Como jugar</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ArrowLeftShort from '../images/Arrow-left-short.svg'\r\n\r\nfunction Navbar(props) {\r\n    const {text} = props\r\n  return (\r\n    <>\r\n        <nav className=\"navbar-light bg-light navbar-position\">\r\n            <div>\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img src={ArrowLeftShort} width=\"40\" alt=\"cerrar\"></img> \r\n                </Link>\r\n            </div>\r\n            <div className=\"navar-title fuente-contenido\">\r\n                {text}\r\n            </div>\r\n        </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nfunction Home(props) {\r\n    const {ganador,eleccionJ1,eleccionJ2,onClick} = props\r\n    return (\r\n        <div className=\"background\">\r\n            <div>\r\n                <div>\r\n                    <h4 className=\"ganador\">{ganador}</h4>\r\n                </div>\r\n                <div className=\"elecciones-container\">\r\n                    <div>\r\n                        <img src={eleccionJ1.image} width=\"100\" alt={eleccionJ1.tipo}></img>\r\n                    </div>\r\n                    <div>                        \r\n                        <img src={eleccionJ2.image} width=\"100\" alt={eleccionJ2.tipo}></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"btn-position\">\r\n                    <button type=\"button\" className=\"btn btn-outline-light btn-position\" onClick={onClick}>Jugar otra vez</button>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n\r\n","import React,{useState} from 'react';\r\nimport Navbar from '../components/navbar'\r\nimport Resultados from '../components/resultados'\r\nimport Piedra from '../images/piedra.png'\r\nimport Papel from '../images/papel.png'\r\nimport Tijera from '../images/tijera.png'\r\nimport Lagarto from '../images/lagarto.png'\r\nimport Spock from '../images/spock.png'\r\n\r\nfunction Play (props){\r\n    const [puntosJugador1, setPuntosJugador1] = useState(0)\r\n    const [puntosJugador2, setPuntosJugador2] = useState(0)\r\n    const [eleccionJ1, setEleccionJ1] = useState(null)\r\n    const [eleccionJ2, setEleccionJ2] = useState(null)\r\n    const [ganador, setGanador] = useState(\"\")\r\n    const [showResultados, setShowResultados] = useState(false)\r\n    const opciones = [  {tipo:\"Piedra\", image:Piedra},\r\n                        {tipo:\"Papel\", image:Papel},\r\n                        {tipo:\"Tijeras\", image:Tijera},\r\n                        {tipo:\"Lagarto\", image:Lagarto},\r\n                        {tipo:\"Spock\", image:Spock}]\r\n\r\n    const verificarGanador = (seleccionP1) =>{\r\n        let seleccionP2 = random_item(opciones)\r\n        if (seleccionP2.tipo === seleccionP1.tipo){\r\n            setGanador(\"EMPATE\",seleccionP1)\r\n        }else if (ganaJugador1(seleccionP1.tipo,seleccionP2.tipo)){\r\n            setGanador(\"GANASTE!!\")\r\n            setPuntosJugador1(puntosJugador1+1)\r\n        }else { setGanador(\"PERDISTE\"); setPuntosJugador2(puntosJugador2+1)}\r\n        setEleccionJ1(seleccionP1)\r\n        setEleccionJ2(seleccionP2)\r\n        setShowResultados(true)\r\n    } \r\n\r\n    const ganaJugador1 = (seleccionP1,seleccionP2) => {\r\n        return (\r\n        (seleccionP1 === \"Tijeras\" && (seleccionP2===\"Papel\"   || seleccionP2===\"Lagarto\")) ||\r\n        (seleccionP1 === \"Papel\"   && (seleccionP2===\"Piedra\"  || seleccionP2===\"Spock\"))   ||\r\n        (seleccionP1 === \"Piedra\"  && (seleccionP2===\"Lagarto\" || seleccionP2===\"Tijeras\"))  ||\r\n        (seleccionP1 === \"Lagarto\" && (seleccionP2===\"Spock\"   || seleccionP2===\"Papel\"))   ||\r\n        (seleccionP1 === \"Spock\"   && (seleccionP2===\"Tijeras\" || seleccionP2===\"Piedra\")))\r\n    }\r\n\r\n    const resetear = () =>{\r\n        setGanador(\"\")\r\n        setEleccionJ1(\"\")\r\n        setEleccionJ2(\"\")\r\n        setShowResultados(false)\r\n    }\r\n\r\n    const texto = () => {\r\n        return(\r\n            <h4>{puntosJugador1} - {puntosJugador2}</h4>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"background-container\">\r\n            <div>\r\n                <Navbar text={texto()}/>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"titulo\" >\r\n                    <p className=\"title-style\" font-size=\"60px\" >Piedra Papel Tijera Lagarto Spock</p>\r\n                </div>\r\n                <div>\r\n                    <h2 className=\"fuente-contenido\">Elige una opcion</h2>\r\n                </div>\r\n                <div className=\"row elecciones\">\r\n                    {opciones.map (content => (\r\n                            <div key={content.tipo} className=\"eleccion\">\r\n                                <img src={content.image}  onClick={()=>verificarGanador(content)} width=\"100\" alt={content.tipo}></img>\r\n                            </div> \r\n                        ))}\r\n                </div>\r\n                <div>\r\n                    {showResultados && <Resultados ganador={ganador} eleccionJ1={eleccionJ1} eleccionJ2={eleccionJ2} onClick={()=>resetear()}/>}\r\n                </div>\r\n            </div>\r\n                \r\n        </div>\r\n    ); \r\n}\r\n\r\nfunction random_item(items){\r\n    return items[Math.floor(Math.random()*items.length)];   \r\n}\r\n\r\nexport default Play;","import React from 'react';\r\nimport Navbar from './navbar'\r\nimport InstuccionImage from '../images/RPSLS.png'\r\n\r\n\r\nfunction Instucciones() {\r\n  const texto = ()=>{\r\n    return(\r\n      <h4>Instrucciones</h4>\r\n  )\r\n  }\r\n\r\n  return (\r\n    <div >\r\n        <Navbar text={texto()}/>\r\n      <div className=\"instruccion-content container\">\r\n        <p className=\"fuente-contenido\"> El juego es una expansión del juego Piedra, Papel, Tijera. Cada jugador elige una variable y la revela al mismo tiempo. El ganador es el que derrota a su oponente. En un empate, el proceso se repite hasta que se encuentra el ganador.</p>\r\n        <div className=\"image-instruccion-position\">\r\n         <img className=\"image-instruccion\" src={InstuccionImage} alt=\"Instruccionees del juego\"></img>\r\n        </div>\r\n        <div className=\"reglas fuente-contenido\">\r\n          <ul>\r\n            <li>Tijera corta a Papel</li>\r\n            <li>Papel tapa a Piedra</li>\r\n            <li>Piedra aplasta a Lagarto</li>\r\n            <li>Lagarto envenena a Spock</li>\r\n            <li>Spock rompe a Tijera</li>\r\n            <li>Tijera decapita a Lagarto</li>\r\n            <li>Lagarto devora a Papel</li>\r\n            <li>Papel desautoriza a Spock</li>\r\n            <li>Spock vaporiza a Piedra</li>\r\n            <li>y como siempre, Piedra aplasta a Tijera</li>\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Instucciones;","import React from 'react';\r\nimport {BrowserRouter,Switch,Route, HashRouter} from 'react-router-dom'\r\nimport Home from './pages/home.js';\r\nimport Play from './pages/play.js';\r\nimport Instrucciones from'./components/instrucciones'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Route exact path=\"/play\" component={Play} />\r\n        <Route exact path=\"/instrucciones\" component={Instrucciones} />\r\n        <Route exact path=\"/\" component={Home} />\r\n      </HashRouter>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}